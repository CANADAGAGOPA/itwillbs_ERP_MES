<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.factron.mapper.purchase.PurchaseMapper">

    <select id="getPurchaseList"
            parameterType="com.itwillbs.factron.dto.purchase.RequestSearchPurchaseDTO"
            resultType="com.itwillbs.factron.dto.purchase.ResponseSearchPurchaseDTO">

        SELECT
        A.ID AS approvalId,
        P.ID AS purchaseId,
        E.ID AS employeeId,
        E.NAME AS employeeName,
        CL.ID AS clientId,
        CL.NAME AS clientName,
        P.STATUS_CODE AS statusCode,
        STP.NAME AS statusName,
        P.CREATED_AT AS createdAt,

        CASE
        WHEN COUNT(DISTINCT PLIST.ID) = 1 THEN MIN(M.NAME)
        ELSE MIN(M.NAME) || ' 외 ' || (COUNT(DISTINCT PLIST.ID) - 1) || '건'
        END AS itemSummary ,

        SUM(PLIST.QUANTITY * PLIST.PRICE) AS totalAmount

        FROM PURCHASE P
        JOIN EMPLOYEE E ON P.EMPLOYEE_ID = E.ID
        JOIN CLIENT CL ON P.CLIENT_ID = CL.ID
        LEFT JOIN APPROVAL A ON P.APPROVAL_ID = A.ID
        LEFT JOIN PURCHASE_LIST PLIST ON P.ID = PLIST.PURCHASE_ID
        LEFT JOIN MATERIAL M ON PLIST.MATERIAL_ID = M.ID
        LEFT JOIN DETAIL_SYS_CODE STP ON P.STATUS_CODE = STP.DETAIL_CODE

        <where>
            <if test="srhApprovalId != null and srhApprovalId != ''">
                AND A.ID = #{srhApprovalId}
            </if>

            <if test="startDate != null and startDate != ''">
                AND P.CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
            </if>

            <if test="endDate != null and endDate != ''">
                AND P.CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
            </if>

            <if test="approvalStatusCode != null and approvalStatusCode != ''">
                AND P.STATUS_CODE = #{approvalStatusCode}
            </if>

            <if test="approvalNameOrEmpId != null and approvalNameOrEmpId != ''">
                AND (
                E.NAME LIKE '%' || #{approvalNameOrEmpId} || '%'
                OR (
                REGEXP_LIKE(#{approvalNameOrEmpId}, '^[0-9]+')
                AND TO_CHAR(E.ID) LIKE '%' || #{approvalNameOrEmpId} || '%'
                )
                OR CL.NAME LIKE '%' || #{approvalNameOrEmpId} || '%'
                )
            </if>
        </where>

        GROUP BY
        A.ID, P.ID, E.ID, E.NAME, CL.ID, CL.NAME,
        P.STATUS_CODE, STP.NAME, P.CREATED_AT

        ORDER BY P.CREATED_AT DESC
    </select>

</mapper>
